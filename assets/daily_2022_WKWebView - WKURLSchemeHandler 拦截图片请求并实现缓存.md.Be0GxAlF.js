import{_ as s,c as i,o as a,a5 as n}from"./chunks/framework.DHgPyqoO.js";const y=JSON.parse('{"title":"iOS WKWebView 使用 WKURLSchemeHandler 拦截图片请求并实现缓存","description":"","frontmatter":{},"headers":[],"relativePath":"daily/2022/WKWebView - WKURLSchemeHandler 拦截图片请求并实现缓存.md","filePath":"daily/2022/WKWebView - WKURLSchemeHandler 拦截图片请求并实现缓存.md","lastUpdated":null}'),l={name:"daily/2022/WKWebView - WKURLSchemeHandler 拦截图片请求并实现缓存.md"},h=n(`<h1 id="ios-wkwebview-使用-wkurlschemehandler-拦截图片请求并实现缓存" tabindex="-1">iOS WKWebView 使用 WKURLSchemeHandler 拦截图片请求并实现缓存 <a class="header-anchor" href="#ios-wkwebview-使用-wkurlschemehandler-拦截图片请求并实现缓存" aria-label="Permalink to &quot;iOS WKWebView 使用 WKURLSchemeHandler 拦截图片请求并实现缓存&quot;">​</a></h1><p>随着 <code>WKWebView</code> 在 iOS 中逐渐取代 <code>UIWebView</code>，越来越多的 App 在业务场景中需要对 Web 内容进行深度定制。一个典型需求是 <strong>对图片等静态资源的请求进行拦截和缓存</strong>，以提升加载速度和用户体验。</p><p>从 iOS 11 开始，Apple 提供了 <strong><code>WKURLSchemeHandler</code> 协议</strong>，开发者可以通过自定义 Scheme 来接管资源请求逻辑。本文将详细介绍如何使用 <strong>Objective-C</strong> 实现图片请求拦截，并结合客户端缓存策略，构建一个更可控的资源加载机制。</p><h2 id="_1-为什么需要拦截图片请求" tabindex="-1">1. 为什么需要拦截图片请求？ <a class="header-anchor" href="#_1-为什么需要拦截图片请求" aria-label="Permalink to &quot;1. 为什么需要拦截图片请求？&quot;">​</a></h2><p>常见的业务痛点包括：</p><ul><li><strong>重复下载</strong>：网页中相同图片可能被多次请求，浪费流量。</li><li><strong>弱网/离线优化</strong>：需要支持预加载和离线缓存。</li><li><strong>统一鉴权</strong>：某些资源需要额外的 Token 或签名验证。</li><li><strong>内容替换</strong>：在某些场景下需要屏蔽或替换部分图片。</li></ul><p>使用 <code>WKURLSchemeHandler</code>，我们可以实现一个类似「自研 CDN」的机制，把资源交由客户端掌控。</p><h2 id="_2-wkurlschemehandler-基本原理" tabindex="-1">2. WKURLSchemeHandler 基本原理 <a class="header-anchor" href="#_2-wkurlschemehandler-基本原理" aria-label="Permalink to &quot;2. WKURLSchemeHandler 基本原理&quot;">​</a></h2><ul><li><strong>注册自定义 Scheme</strong>：在 <code>WKWebViewConfiguration</code> 中绑定 Handler。</li><li><strong>拦截请求</strong>：当网页发起 <code>customimg://</code> 形式的请求时，会进入 <code>WKURLSchemeHandler</code> 回调。</li><li><strong>返回响应</strong>：Handler 需要主动构造 <code>NSURLResponse</code> 和 <code>NSData</code>，再回调给 <code>WKWebView</code>。</li></ul><blockquote><p>⚠️ 注意：<code>WKURLSchemeHandler</code> <strong>只能拦截自定义 Scheme</strong>，无法直接拦截 <code>http/https</code>。因此我们需要在 HTML 中对图片链接做替换。</p></blockquote><h2 id="_3-实现步骤-objective-c" tabindex="-1">3. 实现步骤（Objective-C） <a class="header-anchor" href="#_3-实现步骤-objective-c" aria-label="Permalink to &quot;3. 实现步骤（Objective-C）&quot;">​</a></h2><h3 id="_3-1-注册-handler" tabindex="-1">3.1 注册 Handler <a class="header-anchor" href="#_3-1-注册-handler" aria-label="Permalink to &quot;3.1 注册 Handler&quot;">​</a></h3><div class="language-objective-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">objective-c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">WKWebViewConfiguration </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">configuration </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [[WKWebViewConfiguration </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">alloc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ImageSchemeHandler </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">handler </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [[ImageSchemeHandler </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">alloc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 注册 customimg 协议</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[configuration </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">setURLSchemeHandler:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">handler </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">forURLScheme:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">@&quot;customimg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">WKWebView </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">webView </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [[WKWebView </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">alloc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">initWithFrame:self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.view.bounds</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                                        configuration:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">configuration];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.view </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">addSubview:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">webView];</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>在加载 HTML 时，需将 <code>&lt;img src=&quot;https://...&quot;&gt;</code> 替换为 <code>&lt;img src=&quot;customimg://...&quot;&gt;</code>，才能被拦截。</p><h3 id="_3-2-自定义-handler" tabindex="-1">3.2 自定义 Handler <a class="header-anchor" href="#_3-2-自定义-handler" aria-label="Permalink to &quot;3.2 自定义 Handler&quot;">​</a></h3><div class="language-objective-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">objective-c</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ImageSchemeHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NSObject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;WKURLSchemeHandler&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@property</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">nonatomic</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">strong</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) NSCache </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">memoryCache;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@implementation</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ImageSchemeHandler</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">- (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">instancetype</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">super</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        _memoryCache </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [[NSCache </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">alloc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#pragma mark</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> - WKURLSchemeHandler</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">- (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">webView:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(WKWebView </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)webView </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">startURLSchemeTask:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;WKURLSchemeTask&gt;)urlSchemeTask {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    NSURL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">url </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> urlSchemeTask.request.URL;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">url) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 1. 先查内存缓存</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    NSData</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cachedData </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.memoryCache </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">objectForKey:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">url.absoluteString];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (cachedData) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> respondWithData:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cachedData </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">forTask:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">urlSchemeTask];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 2. 查磁盘缓存</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    NSString</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cachePath </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> cachePathForURL:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">url];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ([[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NSFileManager</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> defaultManager</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">fileExistsAtPath:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cachePath]) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        NSData</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">diskData </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NSData</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> dataWithContentsOfFile:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cachePath];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (diskData) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.memoryCache </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">setObject:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">diskData </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">forKey:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">url.absoluteString];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> respondWithData:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">diskData </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">forTask:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">urlSchemeTask];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 3. 无缓存 -&gt; 下载</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    NSURL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">originURL </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> convertCustomURLToOrigin:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">url];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    NSURLSessionDataTask </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">task </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [[NSURLSession </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sharedSession</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dataTaskWithURL:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">originURL </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">completionHandler:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">^</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NSData</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> _Nullable data, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NSURLResponse</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> _Nullable response, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NSError</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> _Nullable error) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (error </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">data) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            [urlSchemeTask </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">didFailWithError:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">error </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NSError</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> errorWithDomain:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">@&quot;ImageDownload&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> code:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> userInfo:nil</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 写入缓存</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.memoryCache </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">setObject:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">data </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">forKey:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">url.absoluteString];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        [data </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">writeToFile:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cachePath </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">atomically:YES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 返回数据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">self</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> respondWithData:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">data </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">forTask:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">urlSchemeTask];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [task </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">resume</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">- (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">webView:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(WKWebView </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)webView </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stopURLSchemeTask:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;WKURLSchemeTask&gt;)urlSchemeTask {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 可在此中断请求，例如取消 NSURLSessionTask</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#pragma mark</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> - Helper</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">- (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">void</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">respondWithData:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NSData</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)data </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">forTask:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;WKURLSchemeTask&gt;)task {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    NSString</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mimeType </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @&quot;image/png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 可根据文件后缀判断</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    NSURLResponse</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">response </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NSURLResponse</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> alloc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">initWithURL:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">task.request.URL</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                                                       MIMEType:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mimeType</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                                          expectedContentLength:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">data.length</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                                               textEncodingName:nil</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [task </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">didReceiveResponse:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">response];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [task </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">didReceiveData:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">data];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [task </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">didFinish</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">- (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NSString</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cachePathForURL:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NSURL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)url {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    NSString</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fileName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [url.absoluteString </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">stringByReplacingOccurrencesOfString:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">@&quot;/&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> withString:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">@&quot;_&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    NSString</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cacheDir </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NSSearchPathForDirectoriesInDomains</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NSCachesDirectory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NSUserDomainMask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">YES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">firstObject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [cacheDir </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">stringByAppendingPathComponent:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fileName];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">- (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NSURL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">convertCustomURLToOrigin:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NSURL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)customURL {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 示例：customimg://example.com/img.png -&gt; https://example.com/img.png</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    NSString</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">origin </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [customURL.absoluteString </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">stringByReplacingOccurrencesOfString:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">@&quot;customimg://&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> withString:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">@&quot;https://&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NSURL</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> URLWithString:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">origin];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@end</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br></div></div><h2 id="_4-磁盘缓存策略优化" tabindex="-1">4. 磁盘缓存策略优化 <a class="header-anchor" href="#_4-磁盘缓存策略优化" aria-label="Permalink to &quot;4. 磁盘缓存策略优化&quot;">​</a></h2><ol><li><p><strong>过期时间</strong> 可以在写入缓存时，额外保存一个 metadata 文件，记录下载时间和过期时间。</p></li><li><p><strong>缓存清理</strong></p><ul><li>定期扫描缓存目录，清理过期或过大的文件；</li><li>设置缓存大小上限（如 100MB）。</li></ul></li><li><p><strong>MIME 类型识别</strong> 可以通过响应头 <code>Content-Type</code> 来动态确定 <code>mimeType</code>，而不是写死为 <code>image/png</code>。</p></li></ol><h2 id="_5-实际应用场景" tabindex="-1">5. 实际应用场景 <a class="header-anchor" href="#_5-实际应用场景" aria-label="Permalink to &quot;5. 实际应用场景&quot;">​</a></h2><ul><li><strong>离线模式</strong>：提前缓存常用图片，弱网环境下也能快速加载。</li><li><strong>鉴权下载</strong>：拦截请求后，可以在下载逻辑中加上 Token 或自定义 Header。</li><li><strong>动态替换</strong>：某些图片可以在拦截层直接替换为本地资源，实现敏感内容屏蔽。</li></ul><h2 id="_6-注意事项" tabindex="-1">6. 注意事项 <a class="header-anchor" href="#_6-注意事项" aria-label="Permalink to &quot;6. 注意事项&quot;">​</a></h2><ul><li>只能拦截 <strong>自定义 Scheme</strong>，需要在 HTML 中替换图片链接。</li><li>不要在主线程进行下载或磁盘 IO，避免卡顿。</li><li>注意内存缓存的释放，避免大图占用过多内存。</li></ul><h2 id="_7-总结" tabindex="-1">7. 总结 <a class="header-anchor" href="#_7-总结" aria-label="Permalink to &quot;7. 总结&quot;">​</a></h2><p>通过 <code>WKURLSchemeHandler</code>，我们可以为 <code>WKWebView</code> 构建一个灵活的资源加载管道。在 Objective-C 中实现时，可以结合 <strong>内存缓存 + 磁盘缓存</strong>，并复用客户端已有的下载逻辑，实现稳定且高性能的图片加载。</p><p>这一方案不仅能有效减少重复下载，还能更好地适配弱网、离线场景，甚至实现资源级别的安全控制。对于需要深度定制 WebView 行为的应用，这是一个非常实用的技术手段。</p>`,25),p=[h];function e(k,t,r,E,d,g){return a(),i("div",null,p)}const F=s(l,[["render",e]]);export{y as __pageData,F as default};
