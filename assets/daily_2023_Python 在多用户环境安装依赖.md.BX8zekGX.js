import{_ as s,c as a,o as n,a5 as e}from"./chunks/framework.Ce6iPXhF.js";const k=JSON.parse('{"title":"python 在多用户环境安装依赖","description":"","frontmatter":{},"headers":[],"relativePath":"daily/2023/Python 在多用户环境安装依赖.md","filePath":"daily/2023/Python 在多用户环境安装依赖.md","lastUpdated":1712830049000}'),i={name:"daily/2023/Python 在多用户环境安装依赖.md"},p=e(`<h1 id="python-在多用户环境安装依赖" tabindex="-1">python 在多用户环境安装依赖 <a class="header-anchor" href="#python-在多用户环境安装依赖" aria-label="Permalink to &quot;python 在多用户环境安装依赖&quot;">​</a></h1><h3 id="报错" tabindex="-1">报错 <a class="header-anchor" href="#报错" aria-label="Permalink to &quot;报错&quot;">​</a></h3><div class="danger custom-block"><p class="custom-block-title">DANGER</p><p>如下， 意思是外部管理的环境，如果直接安装依赖库可能会破坏您的 Python 安装或操作系统的稳定性。</p></div><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>error: externally-managed-environment</span></span>
<span class="line"><span></span></span>
<span class="line"><span>× This environment is externally managed</span></span>
<span class="line"><span>╰─&gt; To install Python packages system-wide, try apt install</span></span>
<span class="line"><span>    python3-xyz, where xyz is the package you are trying to</span></span>
<span class="line"><span>    install.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    If you wish to install a non-Debian-packaged Python package,</span></span>
<span class="line"><span>    create a virtual environment using python3 -m venv path/to/venv.</span></span>
<span class="line"><span>    Then use path/to/venv/bin/python and path/to/venv/bin/pip. Make</span></span>
<span class="line"><span>    sure you have python3-full installed.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    If you wish to install a non-Debian packaged Python application,</span></span>
<span class="line"><span>    it may be easiest to use pipx install xyz, which will manage a</span></span>
<span class="line"><span>    virtual environment for you. Make sure you have pipx installed.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    See /usr/share/doc/python3.11/README.venv for more information.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>note: If you believe this is a mistake, please contact your Python installation or OS distribution provider. You can override this, at the risk of breaking your Python installation or OS, by passing --break-system-packages.</span></span>
<span class="line"><span>hint: See PEP 668 for the detailed specification.</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h3 id="方案" tabindex="-1">方案 <a class="header-anchor" href="#方案" aria-label="Permalink to &quot;方案&quot;">​</a></h3><p>一种解决方案是创建一个虚拟环境来安装和管理项目的依赖关系。</p><ul><li>使用以下命令创建虚拟环境：</li></ul><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> venv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> myenv</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>激活虚拟环境并安装依赖包：</li></ul><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> myenv/bin/activate</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> requirements.txt</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>停用虚拟环境</li></ul><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deactivate</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>移除虚拟环境</li></ul><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> myenv</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>虚拟环境中添加环境变量 <blockquote><p>虚拟环境的 <code>bin/activate</code> 脚本中设置环境变量：您可以编辑虚拟环境的 <code>bin/activate</code> 脚本，在其中添加设置环境变量的代码。例如，在脚本中添加以下行：</p></blockquote></li></ul><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> VAR_NAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">value</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,16),l=[p];function t(r,h,o,c,d,u){return n(),a("div",null,l)}const m=s(i,[["render",t]]);export{k as __pageData,m as default};
