import{_ as s,c as i,o as a,a5 as n}from"./chunks/framework.DHgPyqoO.js";const l="/assets/2.9Wo8Ol6I.png",e="/assets/3.B00KTKQR.png",t="/assets/4.TaccmoCE.png",p="/assets/5.BLMkb2H0.png",m=JSON.parse('{"title":"先上效果","description":"","frontmatter":{},"headers":[],"relativePath":"daily/2025/基于 MCP (Model Context Protocol) 构建 AI 对话发送邮件.md","filePath":"daily/2025/基于 MCP (Model Context Protocol) 构建 AI 对话发送邮件.md","lastUpdated":null}'),h={name:"daily/2025/基于 MCP (Model Context Protocol) 构建 AI 对话发送邮件.md"},r=n('<h1 id="先上效果" tabindex="-1">先上效果 <a class="header-anchor" href="#先上效果" aria-label="Permalink to &quot;先上效果&quot;">​</a></h1><blockquote><p>AI 对话 - 完成邮件编辑和发送 （我这里使用的 ChatWise 工具）</p></blockquote><p><img src="'+l+'" alt="img"></p><blockquote><p>邮箱 - 收到的邮件</p></blockquote><p><img src="'+e+'" alt="img"></p><h1 id="什么是-mcp" tabindex="-1">什么是 MCP <a class="header-anchor" href="#什么是-mcp" aria-label="Permalink to &quot;什么是 MCP&quot;">​</a></h1><ol><li>🤯 AI 一句话总结： MCP（Model Context Protocol）是一种协议，用于系统与本地运行的MCP服务器之间的通信，以扩展系统的工具和资源能力。</li><li>🔍 在前面一篇文章中有详细说明 <code>什么是 MCP</code></li><li>🤖 Claude 博客： <a href="https://www.anthropic.com/news/model-context-protocol" target="_blank" rel="noreferrer">Introducing the Model Context Protocol</a></li></ol><h2 id="如何快速体验-mcp" tabindex="-1">如何快速体验 MCP <a class="header-anchor" href="#如何快速体验-mcp" aria-label="Permalink to &quot;如何快速体验 MCP&quot;">​</a></h2><ol><li>工具： <code>chatwise</code>、<code>Cline</code>、<code>Cursor</code>、<code>Cherry Studio</code>、<code>Claude</code>等</li><li>MCP 服务： <ul><li><a href="https://mcp.so/zh" target="_blank" rel="noreferrer">https://mcp.so/zh</a></li></ul></li></ol><p><img src="'+t+`" alt="img"></p><pre><code>- [https://cline.bot/mcp-marketplace](https://cline.bot/mcp-marketplace)
</code></pre><p>使用上面的工具 和 MCP 服务提供商就可以愉愉快 🤩 “食”用了</p><p>但需要注意一点： 第三方平台的 MCP 服务可能存在一些安全隐私风险，尤其 sse 传输协议的，需要仔细甄别！</p><h1 id="如何自己搭建-mcp-服务" tabindex="-1">如何自己搭建 MCP 服务 <a class="header-anchor" href="#如何自己搭建-mcp-服务" aria-label="Permalink to &quot;如何自己搭建 MCP 服务&quot;">​</a></h1><h3 id="了解-mcp-协议" tabindex="-1">了解 MCP 协议 <a class="header-anchor" href="#了解-mcp-协议" aria-label="Permalink to &quot;了解 MCP 协议&quot;">​</a></h3><p><img src="`+p+`" alt="img"></p><h3 id="技术栈" tabindex="-1">技术栈 <a class="header-anchor" href="#技术栈" aria-label="Permalink to &quot;技术栈&quot;">​</a></h3><ul><li>Node.js + TypeScript</li><li>Express.js</li><li>Nodemailer</li><li>MCP SDK (@modelcontextprotocol/sdk)</li><li>SSE (Server-Sent Events)</li></ul><h3 id="核心实现" tabindex="-1">核心实现 <a class="header-anchor" href="#核心实现" aria-label="Permalink to &quot;核心实现&quot;">​</a></h3><h4 id="_1-服务器实例创建" tabindex="-1">1. 服务器实例创建 <a class="header-anchor" href="#_1-服务器实例创建" aria-label="Permalink to &quot;1. 服务器实例创建&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> email_server</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> McpServer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;email&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    version: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;1.0.0&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    capabilities: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        resources: {},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        tools: {},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h4 id="_2-邮件发送功能封装" tabindex="-1">2. 邮件发送功能封装 <a class="header-anchor" href="#_2-邮件发送功能封装" aria-label="Permalink to &quot;2. 邮件发送功能封装&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> EmailOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    to</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    subject</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">    text</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sendEmail</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> EmailOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 邮件发送逻辑实现</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h4 id="_3-mcp-工具注册" tabindex="-1">3. MCP 工具注册 <a class="header-anchor" href="#_3-mcp-工具注册" aria-label="Permalink to &quot;3. MCP 工具注册&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">email_server.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;send-email&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;发送邮件&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">params</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> EmailOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 工具实现逻辑</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_4-服务集成" tabindex="-1">4. 服务集成 <a class="header-anchor" href="#_4-服务集成" aria-label="Permalink to &quot;4. 服务集成&quot;">​</a></h4><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/email/sse&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">req</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> transport</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SSEServerTransport</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/email/messages&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, res)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> email_server.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">connect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(transport)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="架构特点" tabindex="-1">架构特点 <a class="header-anchor" href="#架构特点" aria-label="Permalink to &quot;架构特点&quot;">​</a></h3><ol><li><strong>解耦设计</strong><ul><li>邮件服务作为独立的 MCP 服务运行</li><li>通过标准接口与其他服务交互</li><li>便于维护和扩展</li></ul></li><li><strong>实时通信</strong><ul><li>使用 SSE 实现服务器推送</li><li>保持连接状态的实时更新</li></ul></li><li><strong>类型安全</strong><ul><li>使用 TypeScript 确保类型安全</li><li>接口定义清晰，减少运行时错误</li></ul></li><li><strong>错误处理</strong><ul><li>完整的错误捕获和处理机制</li><li>友好的错误反馈</li></ul></li></ol><h3 id="最佳实践" tabindex="-1">最佳实践 <a class="header-anchor" href="#最佳实践" aria-label="Permalink to &quot;最佳实践&quot;">​</a></h3><ol><li><strong>配置管理</strong><ul><li>使用环境变量存储敏感信息</li><li>配置信息集中管理</li></ul></li><li><strong>安全性考虑</strong><ul><li>SMTP 服务器安全配置</li><li>输入验证和清理</li></ul></li><li><strong>可扩展性</strong><ul><li>支持添加新的邮件功能</li><li>便于集成其他服务</li></ul></li></ol><h3 id="使用示例" tabindex="-1">使用示例 <a class="header-anchor" href="#使用示例" aria-label="Permalink to &quot;使用示例&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 发送邮件示例</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> response</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> emailServer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">executeTool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;send-email&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    to: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;recipient@example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    subject: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Test Email&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    text: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hello from MCP Email Service&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h1 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h1><p>通过 MCP 构建邮件服务不仅简化了开发流程，还提供了良好的可扩展性和维护性。这种方式特别适合需要集成多个微服务的现代应用程序。</p><h1 id="未来展望" tabindex="-1">未来展望 <a class="header-anchor" href="#未来展望" aria-label="Permalink to &quot;未来展望&quot;">​</a></h1><ol><li>添加邮件模板支持</li><li>实现附件处理</li><li>集成更多邮件服务提供商</li><li>添加邮件队列功能</li></ol><p>这个实现展示了如何使用现代技术栈构建一个实用的邮件服务，同时遵循了良好的软件工程实践。通过 MCP 的标准化接口，我们可以轻松地将这个服务集成到更大的系统中。</p>`,38),k=[r];function d(o,c,E,g,u,y){return a(),i("div",null,k)}const F=s(h,[["render",d]]);export{m as __pageData,F as default};
